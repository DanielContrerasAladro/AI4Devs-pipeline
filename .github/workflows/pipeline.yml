name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event.pull_request || github.event_name == 'push'
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run backend tests
        run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Build backend
        run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: backend/dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request || github.event_name == 'push'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-dist
          path: dist
      - name: Set up SSH key
        run: |
          echo "$EC2_KEY" > private_key.pem
          chmod 600 private_key.pem
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}
      - name: Copy files to EC2
        run: |
          scp -i private_key.pem -o StrictHostKeyChecking=no -r dist ${{ secrets.EC2_USER }}@${{ secrets.EC2_INSTANCE }}:~/backend-dist
      - name: Run Prisma migrations on EC2
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_INSTANCE }} '
            cd ~/backend-dist &&
            if [ -f ../package.json ]; then
              cd .. && npm install --omit=dev && npx prisma migrate deploy
            fi
          '
      - name: Restart backend with PM2
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_INSTANCE }} 'pm2 delete all || true && pm2 start ~/backend-dist/index.js --name backend'

  notify-success:
    runs-on: ubuntu-latest
    needs: [deploy]
    if: ${{ success() }}
    steps:
      - name: Notify Slack on Success
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "channel": "#nombre-del-canal",
              "attachments": [
                {
                  "color": "#36a64f",
                  "pretext": "✅ *Pipeline finalizado con éxito*",
                  "fields": [
                    {"title": "Repositorio", "value": "${{ github.repository }}", "short": true},
                    {"title": "Branch", "value": "${{ github.ref_name }}", "short": true},
                    {"title": "Commit", "value": "${{ github.sha }}", "short": true},
                    {"title": "Autor", "value": "${{ github.actor }}", "short": true},
                    {"title": "Workflow", "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Ver ejecución>", "short": false}
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  notify-failure:
    runs-on: ubuntu-latest
    needs: [test, build, deploy]
    if: ${{ failure() }}
    steps:
      - name: Notify Slack on Failure
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "channel": "#nombre-del-canal",
              "attachments": [
                {
                  "color": "#ff0000",
                  "pretext": "❌ *Pipeline fallido*",
                  "fields": [
                    {"title": "Repositorio", "value": "${{ github.repository }}", "short": true},
                    {"title": "Branch", "value": "${{ github.ref_name }}", "short": true},
                    {"title": "Commit", "value": "${{ github.sha }}", "short": true},
                    {"title": "Autor", "value": "${{ github.actor }}", "short": true},
                    {"title": "Workflow", "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Ver ejecución>", "short": false}
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}